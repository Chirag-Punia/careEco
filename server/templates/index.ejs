<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= businessName %> - Modern E-commerce</title>
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              primary: '<%= colorTheme.primary %>',
              'primary-dark': '<%= colorTheme.primaryDark %>',
              secondary: '<%= colorTheme.secondary %>'
            }
          }
        }
      }
    </script>
    <!-- Stripe -->
    <script src="https://js.stripe.com/v3/"></script>
</head>
<body class="bg-gray-50">
    <!-- Header -->
    <header class="fixed w-full bg-white shadow-sm z-50">
        <nav class="container mx-auto px-4 py-4 flex items-center justify-between">
            <a href="#" class="text-2xl font-bold text-primary"><%= businessName %></a>
            
            <div class="hidden md:flex items-center space-x-8">
                <a href="#home" class="text-gray-600 hover:text-primary transition-colors">Home</a>
                <a href="#products" class="text-gray-600 hover:text-primary transition-colors">Products</a>
                <a href="#contact" class="text-gray-600 hover:text-primary transition-colors">Contact</a>
                
                <!-- Cart Dropdown -->
                <div class="relative group">
                    <button class="flex items-center text-gray-600 hover:text-primary">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                        </svg>
                        <span id="cart-count" class="ml-2 inline-flex items-center justify-center w-5 h-5 text-xs font-bold text-white bg-primary rounded-full">0</span>
                    </button>
                    
                    <div class="absolute right-0 mt-2 w-72 bg-white rounded-lg shadow-xl hidden group-hover:block">
                        <div id="cart-items" class="p-4">
                            <!-- Cart items will be dynamically inserted here -->
                        </div>
                        <div class="border-t p-4">
                            <div class="flex justify-between mb-4">
                                <span class="font-semibold">Total:</span>
                                <span id="cart-total" class="font-bold">$0.00</span>
                            </div>
                            <button onPress="showCheckout()" class="w-full bg-primary text-white py-2 rounded-md hover:bg-primary-dark transition-colors">
                                Checkout
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <!-- Hero Section -->
    <section id="home" class="relative h-screen flex items-center justify-center bg-gradient-to-r from-primary to-secondary">
        <div class="absolute inset-0 bg-black opacity-50"></div>
        <div class="relative z-10 text-center text-white px-4">
            <h1 class="text-5xl md:text-6xl font-bold mb-6">Welcome to <%= businessName %></h1>
            <p class="text-xl md:text-2xl mb-8"><%= description %></p>
            <a href="#products" class="inline-block bg-white text-primary px-8 py-3 rounded-full text-lg font-semibold hover:bg-gray-100 transition-colors">
                Shop Now
            </a>
        </div>
    </section>

    <!-- Products Section -->
    <section id="products" class="container mx-auto px-4 py-16">
        <h2 class="text-3xl font-bold text-center mb-12">Our Products</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-8">
            <% products.forEach(function(product) { %>
                <div class="bg-white rounded-lg shadow-md overflow-hidden group">
                    <div class="relative overflow-hidden">
                        <img src="<%= Object.values(product.imageUrl)[0] %>" alt="<%= product.name %>" class="w-full h-64 object-cover transform group-hover:scale-110 transition-transform duration-300">
                        <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-opacity"></div>
                    </div>
                    <div class="p-4">
                        <h3 class="text-xl font-semibold mb-2"><%= product.name %></h3>
                        <p class="text-gray-600 mb-4"><%= product.description %></p>
                        <div class="flex justify-between items-center">
                            <span class="text-2xl font-bold text-primary">$<%= product.price %></span>
                            <button onPress="addToCart('<%= product.id %>')" class="bg-primary text-white px-4 py-2 rounded-md hover:bg-primary-dark transition-colors">
                                Add to Cart
                            </button>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>
    </section>

    <!-- Checkout Modal -->
    <div id="checkout-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
        <div class="container mx-auto px-4 py-8">
            <div class="max-w-4xl mx-auto bg-white rounded-lg shadow-xl">
                <div class="p-6">
                    <div class="flex justify-between items-center mb-6">
                        <h2 class="text-2xl font-bold">Checkout</h2>
                        <button onPress="hideCheckout()" class="text-gray-500 hover:text-gray-700">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </button>
                    </div>
                    
                    <form id="payment-form" class="space-y-6">
                        <!-- Customer Information -->
                        <div class="space-y-4">
                            <h3 class="text-lg font-semibold">Customer Information</h3>
                            <div class="grid grid-cols-2 gap-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">First Name</label>
                                    <input type="text" required class="mt-1 w-full px-4 py-2 border rounded-md">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Last Name</label>
                                    <input type="text" required class="mt-1 w-full px-4 py-2 border rounded-md">
                                </div>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Email</label>
                                <input type="email" required class="mt-1 w-full px-4 py-2 border rounded-md">
                            </div>
                        </div>

                        <!-- Payment Information -->
                        <div class="space-y-4">
                            <h3 class="text-lg font-semibold">Payment Information</h3>
                            <div id="card-element" class="mt-1 p-4 border rounded-md">
                                <!-- Stripe Card Element will be inserted here -->
                            </div>
                            <div id="card-errors" class="text-red-600 text-sm"></div>
                        </div>

                        <button type="submit" class="w-full bg-primary text-white py-3 rounded-md hover:bg-primary-dark transition-colors">
                            Complete Order
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Contact Section -->
    <section id="contact" class="bg-gray-100 py-16">
        <div class="container mx-auto px-4">
            <h2 class="text-3xl font-bold text-center mb-12">Contact Us</h2>
            <div class="max-w-2xl mx-auto">
                <form class="space-y-6">
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Name</label>
                        <input type="text" required class="mt-1 w-full px-4 py-2 border rounded-md">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Email</label>
                        <input type="email" required class="mt-1 w-full px-4 py-2 border rounded-md">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Message</label>
                        <textarea required rows="4" class="mt-1 w-full px-4 py-2 border rounded-md"></textarea>
                    </div>
                    <button type="submit" class="w-full bg-primary text-white py-3 rounded-md hover:bg-primary-dark transition-colors">
                        Send Message
                    </button>
                </form>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="bg-gray-900 text-white">
        <div class="container mx-auto px-4 py-12">
            <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
                <div>
                    <h3 class="text-xl font-bold mb-4"><%= businessName %></h3>
                    <p class="text-gray-400"><%= description %></p>
                </div>
                <div>
                    <h4 class="text-lg font-semibold mb-4">Quick Links</h4>
                    <ul class="space-y-2">
                        <li><a href="#home" class="text-gray-400 hover:text-white transition-colors">Home</a></li>
                        <li><a href="#products" class="text-gray-400 hover:text-white transition-colors">Products</a></li>
                        <li><a href="#contact" class="text-gray-400 hover:text-white transition-colors">Contact</a></li>
                    </ul>
                </div>
                <div>
                    <h4 class="text-lg font-semibold mb-4">Contact</h4>
                    <ul class="space-y-2 text-gray-400">
                        <li>Email: contact@<%= businessName.toLowerCase() %>.com</li>
                        <li>Phone: (555) 123-4567</li>
                        <li>Address: 123 Business St, City, State</li>
                    </ul>
                </div>
                <div>
                    <h4 class="text-lg font-semibold mb-4">Newsletter</h4>
                    <form class="space-y-4">
                        <input type="email" placeholder="Your email" class="w-full px-4 py-2 rounded-md bg-gray-800 text-white border-gray-700">
                        <button type="submit" class="w-full bg-primary text-white py-2 rounded-md hover:bg-primary-dark transition-colors">
                            Subscribe
                        </button>
                    </form>
                </div>
            </div>
            <div class="border-t border-gray-800 mt-12 pt-8 text-center text-gray-400">
                <p>&copy; <%= new Date().getFullYear() %> <%= businessName %>. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <script>
       
        let cart = {
            items: [],
            total: 0
        };

        function addToCart(productId) {
           
            fetch(`/api/products/${productId}`)
                .then(response => response.json())
                .then(product => {
                    const existingItem = cart.items.find(item => item.id === productId);
                    
                    if (existingItem) {
                        existingItem.quantity += 1;
                    } else {
                        cart.items.push({
                            ...product,
                            quantity: 1
                        });
                    }
                    
                    updateCart();
                    showNotification('Product added to cart');
                });
        }

        function updateCart() {
            cart.total = cart.items.reduce((sum, item) => sum + (item.price * item.quantity), 0);
            
            document.getElementById('cart-count').textContent = cart.items.reduce((sum, item) => sum + item.quantity, 0);
            
            const cartItems = document.getElementById('cart-items');
            cartItems.innerHTML = cart.items.map(item => `
                <div class="flex items-center justify-between py-2">
                    <div>
                        <h4 class="font-semibold">${item.name}</h4>
                        <p class="text-sm text-gray-600">Qty: ${item.quantity}</p>
                    </div>
                    <div class="flex items-center">
                        <span class="font-bold">$${(item.price * item.quantity).toFixed(2)}</span>
                        <button onPress="removeFromCart('${item.id}')" class="ml-2 text-red-500 hover:text-red-700">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                            </svg>
                        </button>
                    </div>
                </div>
            `).join('');
            
            document.getElementById('cart-total').textContent = `$${cart.total.toFixed(2)}`;
            localStorage.setItem('cart', JSON.stringify(cart));
        }

        function removeFromCart(productId) {
            cart.items = cart.items.filter(item => item.id !== productId);
            updateCart();
            showNotification('Product removed from cart');
        }

        function showNotification(message) {
            const notification = document.createElement('div');
            notification.className = 'fixed bottom-4 right-4 bg-primary text-white px-6 py-3 rounded-lg shadow-lg transform transition-transform duration-300 translate-y-0';
            notification.textContent = message;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.style.transform = 'translateY(200%)';
                setTimeout(() => notification.remove(), 300);
            }, 2000);
        }

       
        function showCheckout() {
            document.getElementById('checkout-modal').classList.remove('hidden');
            initializeStripe();
        }

        function hideCheckout() {
            document.getElementById('checkout-modal').classList.add('hidden');
        }

        function initializeStripe() {
            const stripe = Stripe('your_publishable_key');
            const elements = stripe.elements();
            const card = elements.create('card');
            card.mount('#card-element');

            const form = document.getElementById('payment-form');
            form.addEventListener('submit', async (event) => {
                event.preventDefault();
                
                const { token, error } = await stripe.createToken(card);
                
                if (error) {
                    const errorElement = document.getElementById('card-errors');
                    errorElement.textContent = error.message;
                } else {
                    const response = await fetch('/process-payment', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            token: token.id,
                            amount: cart.total * 100
                        })
                    });
                    
                    if (response.ok) {
                        cart = { items: [], total: 0 };
                        updateCart();
                        hideCheckout();
                        showNotification('Order completed successfully!');
                    }
                }
            });
        }

       
        document.addEventListener('DOMContentLoaded', () => {
            const savedCart = localStorage.getItem('cart');
            if (savedCart) {
                cart = JSON.parse(savedCart);
                updateCart();
            }
        });
    </script>
</body>
</html>